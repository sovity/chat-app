name: CI

on:
  push:
    branches: [main]
  release:
    types: [published]
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{ github.repository_owner }}

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
    env:
      # For Docker Image
      IMAGE_NAME: chat-app-backend
      IMAGE_TITLE: Chat App Backend
      IMAGE_DESCRIPTION: Quarkus Backend for the "Use Case App Example - Chat App"
    steps:
      - uses: actions/checkout@v3

      - name: "Set up JDK 17"
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: "Gradle: Validate Gradle Wrapper"
        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3

      - name: "Gradle: Build"
        uses: gradle/gradle-build-action@749f47bda3e44aa060e82d7b3ef7e40d953bd629
        env:
          GPR_USER: ${{ github.actor }}
          GPR_KEY: ${{ secrets.GITHUB_TOKEN }}
        with:
          build-root-directory: backend
          arguments: build

      - name: "Docker: Log in to the Container registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Docker: Extract metadata (tags, labels) for Docker"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=release,enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: "Docker: Build and Push Image"
        uses: docker/build-push-action@v4
        with:
          file: backend/src/main/docker/Dockerfile.jvm
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  frontend:
    name: "Frontend"
    env:
      # For Docker Image
      IMAGE_NAME: chat-app-frontend
      IMAGE_TITLE: Chat App Frontend
      IMAGE_DESCRIPTION: Next.js Frontend for the "Use Case App Example - Chat App"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 15
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: |
            **/package-lock.json
            **/yarn.lock

      - name: Install Dependencies
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        run: npm run build

      - name: "Docker: Log in to the Container registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Docker: Extract metadata (tags, labels) for Docker"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BASE }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_TITLE }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
          tags: |
            type=schedule
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=release,enable=${{ startsWith(github.ref, 'refs/tags/') }}

      - name: "Docker: Build and Push Image"
        uses: docker/build-push-action@v4
        with:
          file: frontend/Dockerfile
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
